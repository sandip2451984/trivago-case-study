parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    AppBundle.GenericRepository:
        public: true
        class: AppBundle\Repository\GenericRepository
        arguments: ['@doctrine.orm.entity_manager']

    AppBundle.TypoFixer:
        class: AppBundle\Service\TypoFixer

    AppBundle.AnalyzerResponse:
        public: true
        shared: false
        class: AppBundle\Service\AnalyzerResponse
        arguments: ['@jms_serializer']
    
    AppBundle.DefaultAnalyzer:
        public: true
        class: AppBundle\Service\DefaultAnalyzer
        arguments: ['@doctrine.orm.entity_manager', '@service_container', '@AppBundle.AnalyzerResponse', '@AppBundle.TypoFixer']

    AppBundle.DoctrineEventListener:
        class: AppBundle\EventListener\SQLiteSetup
        tags:
            - {name: doctrine.event_listener, event: postLoad, lazy: true}